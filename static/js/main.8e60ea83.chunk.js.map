{"version":3,"sources":["blockchain.js","App.js","Blocs.js","reportWebVitals.js","index.js"],"names":["SHA256","require","hashing","number","toString","HashingBlock","props","handleChange","e","setState","hashword","target","value","hashed","state","baseword","className","type","this","onChange","Component","HandlingBlock","console","log","distance","incrementDistance","bind","changeName","moneyname","assert","newname","wholetext","onDistanceChange","onNameChange","push","BlocIntro1","handleClick","document","addEventListener","removeEventListener","BlocIntro2","BlocIntro3","Button","variant","onClick","BlocIntro4","handleSubmit","onSubmit","Bloc1","Bloc2","Bloc3","Bloc4","Bloc5","Bloc6","Bloc7","Bloc8","Bloc9","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e60ea83.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst SHA256 = require(\"crypto-js/sha256\");\r\n\r\nfunction hashing(number){\r\n        return SHA256(number).toString()\r\n}\r\n\r\nclass HashingBlock extends Component {\r\n        constructor(props) {\r\n                super(props);\r\n                this.state = {hashword : this.props.baseword, hashed : hashing(this.props.baseword)}\r\n        }\r\n        \r\n        handleChange = (e) => {\r\n        this.setState({hashword : (e.target.value)})\r\n        this.setState({hashed : hashing(e.target.value)})\r\n        }\r\n        \r\n        render(){\r\n                return(\r\n                        <div className=\"text-center\">\r\n                                <form>\r\n                                        <input type=\"text\" value={this.state.hashword} onChange={this.handleChange}/>\r\n                                </form>\r\n                                {this.state.hashed}\r\n                        </div>\r\n                )\r\n        }\r\n}\r\n\r\nexport {hashing, HashingBlock}","// Imports\r\n\r\nimport './App.css';\r\nimport React, { Component } from 'react'\r\nimport {introtext1, introtext2, introtext3, introtext4, text1, text2, text3, text4, text5, text6, text6_1, text7, text8, text9} from './Blocs.js'\r\nimport {hashing, HashingBlock} from './blockchain.js'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n/*\r\nHere you can change the base parameters of the website\r\n\r\nPick another startdistance if you want to start the story further (From 1 to 13)\r\nPick another defaultname if you want to change the default name of the currency\r\nPick another baseword if you can to change the default word of the hash machine\r\n*/\r\nconst startdistance = 1\r\nconst defaultname = \"Toycoin\"\r\nconst baseword = \"Bonjour\"\r\n\r\nclass HandlingBlock extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.distance)\r\n    this.incrementDistance = this.incrementDistance.bind(this)\r\n    this.changeName = this.changeName.bind(this)\r\n    this.state = {distance: startdistance, moneyname: defaultname};\r\n    console.log(\"Voici l'Ã©tat initial du state\")\r\n    console.log(this.state)\r\n  }\r\n\r\n  incrementDistance() {\r\n    if(this.state.distance < 13){\r\n      console.log(\"We move forward in the document\")\r\n      this.setState({distance: this.state.distance+1});\r\n    }\r\n    console.assert(this.state.distance <= 13)\r\n  }\r\n\r\n  changeName(newname) {\r\n    console.log(\"This is the old money name: \" + this.state.moneyname)\r\n    this.setState({moneyname: newname})\r\n    console.log(\"The name is changed to \" + this.state.moneyname)\r\n  }\r\n\r\n  render(){ \r\n    var wholetext = [];\r\n\r\n    if (this.state.distance === 1){\r\n      console.log(\"Entered Intro Block 1\")\r\n      return (\r\n      <div> <BlocIntro1 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n      </div>\r\n      )  \r\n    }\r\n    if (this.state.distance ===2){\r\n      console.log(\"Entered Intro Block 2\")\r\n      return (\r\n      <div>\r\n        <BlocIntro2 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n      </div>\r\n      )\r\n    }\r\n    if (this.state.distance ===3){\r\n      console.log(\"Entered Intro Block 3\")\r\n      return (\r\n      <div><BlocIntro3 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n      </div>\r\n      )\r\n    }\r\n    if (this.state.distance ===4){\r\n      console.log(\"Entered Intro Block 4\")\r\n      return (\r\n      <div><BlocIntro4 onDistanceChange={this.incrementDistance} onNameChange={this.changeName} distance={this.state.distance} moneyname={this.state.moneyname}/>\r\n      </div>\r\n      )\r\n    }\r\n    if (this.state.distance >= 5){\r\n      console.log(\"Entered Block 1\")\r\n      wholetext.push(<div><Bloc1 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >= 6){\r\n      console.log(\"Entered Block 2\")\r\n      wholetext.push(<div>\r\n        <Bloc2 onDistanceChange={this.incrementDistance} distance={this.state.distance} moneyname={this.state.moneyname}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=7){\r\n      console.log(\"Entered Block 3\")\r\n      wholetext.push(<div><Bloc3 onDistanceChange={this.incrementDistance} distance={this.state.distance} moneyname={this.state.moneyname}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=8){\r\n      console.log(\"Entered Block 4\")\r\n      wholetext.push(<div><Bloc4 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=9){\r\n      console.log(\"Entered Block 5\")\r\n      wholetext.push(<div><Bloc5 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=10){\r\n      console.log(\"Entered Block 6\")\r\n      wholetext.push(\r\n        <div>\r\n          <div>\r\n            <Bloc6 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n          </div>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=11){\r\n      console.log(\"Entered Block 7\")\r\n      wholetext.push(<div><Bloc7 onDistanceChange={this.incrementDistance} distance={this.state.distance} moneyname={this.state.moneyname}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=12){\r\n      console.log(\"Entered Block 8\")\r\n      wholetext.push(<div><Bloc8 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n        </div>)\r\n    }\r\n    if (this.state.distance >=13){\r\n      console.log(\"Entered Block 9\")\r\n      wholetext.push(<div><Bloc9 onDistanceChange={this.incrementDistance} distance={this.state.distance}/>\r\n        </div>)\r\n    }\r\n    return wholetext;\r\n  }\r\n}\r\n\r\nclass BlocIntro1 extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    console.log(\"The screen is clicked\")\r\n    this.props.onDistanceChange();\r\n  }\r\n\r\n  render(){\r\n    return <div className=\"text-center\"> \r\n    <div className=\"fs-3\">\r\n      {introtext1()}\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nclass BlocIntro2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    console.log(\"The screen is clicked\")\r\n    this.props.onDistanceChange();\r\n  }\r\n  render(){\r\n    return<div className=\"text-center\"> \r\n    <div className=\"fs-3\">\r\n      {introtext2()}\r\n    </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nclass BlocIntro3 extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    console.log(\"The button is clicked\")\r\n    this.props.onDistanceChange();\r\n  }\r\n\r\n  render(){\r\n    return <div className=\"text-center\">\r\n      <div className=\"fs-3\">{introtext3()}</div>\r\n      <Button variant=\"primary\" onClick={() => this.handleClick()}>Allons-y</Button>\r\n      </div>\r\n  }\r\n}\r\n\r\nclass BlocIntro4 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    console.log(\"The form is submitted\")\r\n    this.props.onDistanceChange();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.onNameChange(e.target.value);\r\n  }\r\n\r\n  render(){\r\n    return <div className=\"text-center\">\r\n      <div className=\"fs-3\">{introtext4()}</div>\r\n      \r\n      <form onSubmit={this.handleSubmit}>\r\n        <input type=\"text\" value={this.props.moneyname} onChange={this.handleChange}/>\r\n        <input type=\"submit\" value=\"Choisir\" />\r\n      </form>\r\n    </div>\r\n  }\r\n}\r\n\r\n/* END OF THE INTRO */\r\n\r\nclass Bloc1 extends Component { //Notation des transactions\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener('mousedown', this.handleClick, false);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    console.log(\"The screen is clicked\")\r\n    this.props.onDistanceChange();\r\n  }\r\n\r\n  render(){\r\n    return ( <div className=\"text-center\"> <br/> <br/> <br/> <div className=\"fs-3\">{text1()}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc2 extends Component { //DÃ©centralisation de la monnaie\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (<div className=\"text-center\"> <br/> <br/> <br/> <div className=\"fs-3\">{text2(this.props.moneyname)}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc3 extends Component { //Signature Ã©lectronique\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div className=\"text-center\"> <br/> <br/> <br/> \r\n      <div className=\"fs-3\">\r\n        {text3(this.props.moneyname)}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc4 extends Component { //Listes d'attentes\r\n    constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (<div className=\"text-center\"> <br/> <br/> <br/> <div className=\"fs-3\">{text4()}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc5 extends Component { //Blockchain\r\n    constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (<div className=\"text-center\"> <br/> <br/> <br/> <div className=\"fs-3\">{text5()}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc6 extends Component { //Proof of work\r\n    constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div className=\"text-center\"> <br/> <br/> <br/> \r\n      <div className=\"fs-3\">\r\n        {text6()}\r\n        <div> <br/> Tu peux essayer de hasher tes propres mots !\r\n            <HashingBlock baseword = {baseword}/>\r\n          </div> <br/>\r\n        {text6_1()}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc7 extends Component { //RÃ©tribution\r\n    constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (<div className=\"text-center\"> <br/> <br/> <br/> <div className=\"fs-3\">{text7(this.props.moneyname)}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc8 extends Component { //Travail d'Ã©quipe\r\n  \r\n  render(){\r\n    return (\r\n    <div className=\"text-center\"> <br/> <br/> <br/> \r\n      <div className=\"fs-3\">\r\n        {text8()}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Bloc9 extends Component { //Conclusion\r\n  \r\n  render(){\r\n    return (\r\n    <div className=\"text-center\"> <br/> <br/> <br/> \r\n      <div className=\"fs-3\">\r\n        {text9()}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <HandlingBlock />\r\n  }\r\n}\r\n\r\nexport default App;\r\n","function introtext1(){\r\n        return(<div>\r\n                Au beau milieu de la forÃªt se trouve un village...\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction introtext2(){\r\n        return(<div>\r\n                PeuplÃ© de petits animaux sympathiques...\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction introtext3(){\r\n        return(<div>\r\n                <div>\r\n                Les pommes de pin Ã§a prend beaucoup de place dans les poches... Et si on crÃ©ait une vraie monnaie ?\r\n                </div>\r\n                <div>\r\n                Ãtes-vous prÃªt Ã  leur donner un coup de main ?\r\n                </div>\r\n        </div>\r\n\r\n        )\r\n}\r\n\r\nfunction introtext4(){\r\n        return(<div>\r\n                Commencons par choisir un nom pour cette monnaie rÃ©volutionnaire. Sois crÃ©atif ! :\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction text1(){\r\n        return(<div>\r\n                <div>\r\n                Le chef du village achÃ¨te un carnet qui rÃ©pertorie chaque transaction, afin de pouvoir dÃ©duire automatiquement combien chaque habitant peut encore dÃ©penser. \r\n                Les animaux le prÃ©viennent quâils veulent faire une transaction, et il lâÃ©crit pour eux.\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Si quelquâun de malhonnÃªte accÃ¨de Ã  son carnet, la liste de transactions pourrait Ãªtre modifiÃ©e, voire pire : brÃ»lÃ©e !\r\n                </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction text2(moneyname){\r\n        return(<div>\r\n                <div>\r\n                Donnons un carnet Ã  chaque habitant qui veut pouvoir Ã©changer sa monnaie. Une fois que 2 animaux se sont mis dâaccord sur une transaction, ils lâÃ©crivent dans leur fichier propre, et envoient une lettre Ã  tous les habitants du village : Â« Attention, inscrivez que Pingouin a donnÃ© 2 {moneyname}s Ã  Paresseux Â». Tout le monde le note dans son propre carnet.\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Renard a vite besoin dâargent pour acheter une tarte. Il Ã©crit dans une lettre : Â« Inscrivez tous que Grenouille mâa donnÃ© 100 {moneyname}s ! Â». Le reste du village reÃ§oit la lettre, et ils copient la transaction dans leur carnet. \r\n                Nâimporte qui peut inscrire des transactions fausses et le reste du village va les copier !\r\n                </div>\r\n        </div>\r\n\r\n        )\r\n}\r\n\r\nfunction text3(moneyname){\r\n        return(<div>\r\n                <div>\r\n                Chaque nouvel habitant qui souhaite rejoindre le systÃ¨me reÃ§oit 2 choses : \r\n                1 : Un modÃ¨le de serrure personnelle top secrÃ¨te.\r\n                2 : Un trousseau de clÃ©s, une pour chaque habitant du village.\r\n                Avant dâÃ©crire une transaction dans une lettre, et de la transmettre, Pingouin sÃ©curise sa lettre en la mettant dans un coffre, avec sa serrure propre. Personne dâautre ne peut rÃ©aliser la mÃªme serrure que lui. Pour savoir qui a envoyÃ© la lettre, ils testent toutes les clÃ©s quâils possÃ¨dent et comprennent vite que, vu que la clÃ© de pingouin fonctionne, Ã§a ne peut Ãªtre que Pingouin qui a rÃ©digÃ© cette transaction. Une fois que la lettre est transmise, Ã  lâintÃ©rieur de son coffre, les animaux la copient dans leur carnet.\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Cette fois-ci, Renard a envie dâun cookie, et dâun jus de fruits, coÃ»tant 5 {moneyname}s chacun ! ProblÃ¨me : Renard est presque Ã  sec, il ne lui reste que 5 {moneyname}s. Pourtant, il a trÃ¨s envie dâacheter les deux douceurs. Il trouve une stratÃ©gie.\r\n                Renard prÃ©pare 2 lettres : Lâune dâelle dit quâil a dÃ©pensÃ© 5 {moneyname}s dans un cookie, lâautre quâil les a dÃ©pensÃ©s dans un jus de fruit. Il les enferme dans leur coffre, avec la serrure renard. Il envoie sa premiÃ¨re lettre Ã  un coin du village, et court vite de lâautre cÃ´tÃ© pour envoyer la deuxiÃ¨me.\r\n                Pingouin reÃ§oit dâabord la premiÃ¨re lettre. Il vÃ©rifie dans son carnet, et voit que Renard a achetÃ© un cookie avec ses 5 derniers {moneyname}s. Il note lâinfo, et retransmet la lettre au reste du village. Pendant ce temps-lÃ , de lâautre cÃ´tÃ©, Paresseux reÃ§oit la lettre numÃ©ro 2. Il vÃ©rifie, selon son carnet, Renard possÃ¨de encore 5 {moneyname}s. Il ne voit donc aucun problÃ¨me Ã  inscrire la transaction !\r\n                Ca y est, Renard a rÃ©ussi Ã  mettre des infos contradictoires en circulation dans le village.\r\n                </div>\r\n        </div>          \r\n        )\r\n}\r\n\r\nfunction text4(){\r\n        return(<div>\r\n                <div>\r\n                Solution : Listes dâattentes\r\n                On donne Ã  chaque habitant, en plus de son carnet, un petit tableau et une craie pour noter les transactions en attente de validation. DÃ¨s que Pingouin reÃ§oit une transaction dans une lettre, il lâÃ©crit, non plus dans son carnet, mais sur son petit tableau. Ainsi, tous les jours Ã  18 heures, le chef du village choisit une liste dâattente au hasard, par exemple celle de Paresseux, et fait une annonce au village pour dire que la liste dâattente de paresseux a Ã©tÃ© choisie comme liste officielle, et tout le monde recopie les transactions de cette liste dâattente dans son carnet. AprÃ¨s Ã§a, tout le monde efface son tableau.\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Renard pourrait Ã©crire des informations fausses sur son tableau, et il existe une petite chance quâil soit un jour choisi au hasard. Tout le monde recopierait des informations fausses !\r\n                </div>\r\n        </div>         \r\n        )\r\n}\r\n\r\nfunction text5(){\r\n        return(<div>\r\n                <div>\r\n                Le village se met dâaccord sur un nouveau systÃ¨me. Chaque tableau noir possÃ¨de, en plus de sa liste dâattente, un chiffre, commun Ã  tout le monde. Ce chiffre sâappelle lâidentifiant. \r\n                Imaginons que tout le monde reÃ§oive le chiffre 10.\r\n                Le chef du village annonce une rÃ¨gle : Â« Le premier qui trouve lâidentifiant suivant gagne le droit dâimposer sa liste dâattente Ã  tout le reste du village ! Â»\r\n                Il ajoute : Â« Pour trouver lâidentifiant suivant, il suffit de multiplier lâidentifiant actuel par 8 Â»\r\n                Tous les habitants savent que Renard veut inscrire des bÃªtises dans les transactions, donc ils se pressent tous pour Ãªtre le premier Ã  rÃ©ussir la multiplication. Paresseux finit par trouver le rÃ©sultat, aprÃ¨s quelques minutes de recherche. Il Ã©crit immÃ©diatement le nombre quâil a trouvÃ© : 80, et sa liste dâattente sur le panneau dâaffichage du village. Pingouin Ã©tait en train de calculer, mais il voit lâannonce. Il vÃ©rifie, et voit trÃ¨s vite que, effectivement, lâidentifiant trouvÃ© par Paresseux est correct. Tout le monde arrive Ã  la mÃªme conclusion, et la liste dâattente de Paresseux est donc recopiÃ©e par tout le village. \r\n                Pour connaÃ®tre qui sera le prochain Ã  imposer sa liste, le village prend lâidentifiant trouvÃ© par Paresseux comme nouvel identifiant. Ce sera donc celui qui trouve 80 multipliÃ© par 8 qui pourra proposer sa liste. Et cetera !\r\n                On a donc crÃ©Ã© des listes dâattentes liÃ©es entre elles par leur identifiant, comme les maillons dâune chaÃ®ne. Chaque liste dâattente reprÃ©sente un bloc, on vient donc de crÃ©er ce qui sâappelle une blockchain.\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Le calcul proposÃ© par le chef du village est un peu facileâ¦ Comme Renard est malin, il calcule Ã  lâavance tous les rÃ©sultats, en peut dÃ©sormais proposer des listes dâattentes fausses.\r\n                </div>\r\n        </div>              \r\n        )\r\n}\r\n\r\nfunction text6_1(){\r\n        return(<div>\r\n                <div>\r\n                Le chef du village dÃ©cide de dÃ©bloquer un peu de budget, et il offre un ordinateur Ã  chaque habitant du village un ordinateur avec un programme de hashage !\r\n\r\n                Comme vu juste avant, un identifiant et une liste de transactions forment donc un bloc. On colle ces deux Ã©lÃ©ments Ã  un nombre inconnu appelÃ© le nonce. Ensemble, ils forment un gros texte !\r\n                Lâobjectif est simple, il faut hasher le texte formÃ© par ces 3 donnÃ©es, et trouver un nouveau texte qui respecte une condition fixÃ©e. Par exemple, le chef annonce : Â« Le rÃ©sultat du hashage doit dÃ©buter par abc ! Â»\r\n                Par exemple, le rÃ©sultat abc55cc22 serait un rÃ©sultat satisfaisant.\r\n                Comme il est impossible de retrouver un texte initial Ã  partir dâun rÃ©sultat de hashage, il nây a quâune seule possibilitÃ© pour rÃ©soudre ce problÃ¨me : Tester toutes les valeurs possibles pour le nonce, et regarder si le hashage correspondant respecte la rÃ¨gle mise en place, le plus vite possible.\r\n                </div> \r\n                <div>\r\n                Si un habitant trouve un nombre acceptable, on appelle alors cela la proof of work, il gagne le droit de transmettre sa liste dâattente Ã  tout le village. Le rÃ©sultat du hashage, lui, devient lâidentifiant du bloc suivant.  \r\n                La fraude devient pratiquement impossible, car Renard nâa pas le temps de tester des nombres au hasard toute la journÃ©e. Et mÃªme sâil le faisait, il a peu de chances de tomber dessus.\r\n                Cette solution permet aussi dâempÃªcher la modification de transactions dÃ©jÃ  validÃ©es, car la moindre lettre changÃ©e modifierait le rÃ©sultat du hashage, et donc tous les identifiants des blocs suivants.\r\n                </div>\r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                ProblÃ¨me : \r\n                Pingouin est content du systÃ¨me, mais tester des nombres toute la journÃ©e ne le motive pas vraimentâ¦\r\n                </div>\r\n        </div>             \r\n        )\r\n}\r\n\r\nfunction text6(){\r\n        return(<div>\r\n                Pour nous aider Ã  rÃ©soudre ce problÃ¨me, nous aurons besoin du hashage :\r\n                Le hashage, câest un procÃ©dÃ© informatique qui consiste Ã  transformer de maniÃ¨re automatique un texte, grand ou moyen en un court nombre de taille fixe. Un peu comme un magasin reprÃ©sente tous les produits de son stock par un petit code-barre.\r\n                Le hashage a Ã©galement une spÃ©cificitÃ© supplÃ©mentaire : Une fois que lâon a hashÃ© un texte, il est impossible de calculer le texte initial Ã  partir du rÃ©sultat. Câest trÃ¨s utile, car cela a plein dâutilisations: par exemple, on peut vÃ©rifier facilement qu'un texte n'a pas Ã©tÃ© modifiÃ©.\r\n\r\n        </div>        \r\n        )\r\n}\r\n\r\nfunction text7(moneyname){\r\n        return(<div>\r\n                <div>\r\n                Le chef du village rÃ©agit : AprÃ¨s chaque cycle, lâanimal ayant fourni la proof of work recevra 10 {moneyname}s crÃ©Ã©s juste pour lui, quâil peut dÃ©penser comme il lâentend. Ainsi, cela motive les habitants Ã  lutter pour la sÃ©curitÃ© de tous !\r\n                </div> \r\n                <h2>\r\n                ProblÃ¨me:\r\n                </h2>\r\n                <div>\r\n                Le village grandit et le systÃ¨me {moneyname} a beaucoup de succÃ¨s ! Mais il grandit tellement, quâau final, Pingouin nâarrive plus jamais Ã  trouver le nombre. Quelquâun de plus rapide rÃ©ussit toujours avant lui.\r\n                </div>\r\n        </div>        \r\n        )\r\n}\r\n\r\nfunction text8(){\r\n        return(<div>\r\n                <div>\r\n                Au lieu de travailler tout seul, des quartiers du village dÃ©cident de former une Ã©quipe et sâorganiser pour avoir plus de chance de trouver la proof of work. Ils se rÃ©partissent la tÃ¢che pour optimiser leurs chances, et se partagent les gains en cas de rÃ©ussite. Leur temps est mieux utilisÃ© car ils sont garantis de ne jamais tester le mÃªme nombre quâun autre du groupe a dÃ©jÃ  testÃ© ! Les membres du groupes gagnent donc plus souvent, mais la somme est partagÃ©e.\r\n                </div> \r\n        </div>        \r\n        )\r\n}\r\n\r\nfunction text9(){\r\n        return(<div>\r\n                <div>\r\n                Cela a pris du temps... Mais finalement, l'entiÃ¨retÃ© du village semble avoir trouvÃ© une solution qui leur convient. Le systÃ¨me de Blockchain en proof en work fonctionne du tonnerre et on n'entend plus beaucoup parler de Renard. Le Chef du village tient Ã  vous remercier pour votre aide et organise une grande fÃªte en votre honneur ! FÃ©licitations !\r\n                </div> \r\n        </div>        \r\n        )\r\n}\r\n\r\nexport {introtext1, introtext2, introtext3, introtext4, text1, text2, text3, text4, text5, text6, text6_1, text7, text8, text9}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}